Attributes¥	departmentName¥	departmentAbbrevation¥	programmeName¥	programmeAbbrevation¥	branchName¥	studentName¥	studentIDNbr¥	studentLoginID¥	courseCode¥	courseCredits¥	courseName¥	courseCapacity¥	courseCategory¥	courseIsQueueable¥	placeInQueue¥	grade¥	coursePrerequisitesdepartmentName -> departmentAbbrevationdepartmentAbbrevation -> departmentNameViolating 3NF. But departmentAbbrevation and departmentName cannot be both part of the key so departmentName will still be the key but departmentAbbrevation is unique. programmeName -> programmeAbbrevationThe name of the programme will be shortened to a abbrevation. A programme will have a unique name but the abbrevation is not neceraily unique.studentLoginID -> programmeName branchName studentName studentIDNbrDoes not violate any normalforms. studentLoginID is a key and so is programmeName and branchName, the rest are nonkeys. studentIDNbr -> studentLoginIDViolates 3NF but studentIDNbr is unique in a higher sense than studentLoginID. We cannot edit the value of a studentIDNbr but we can choose the value of studentLoginID which will also be unique at the university and is choosen from the students name and/or ID number. (Two students cannot have identical usernames). If we add the fact that passing unisserarily around a persons ID number around on the internet question of privacy we chose to have studentLoginID as a key and the studentIDNbr as unique.studentLoginID courseCode -> gradeDoes not violate any normalforms. Looks identical to the ÓCompletedÓ relationship in our schema. courseCode -> courseName courseCredits courseCategoryDoes not violate any normalforms. courseCode is a key and the rest are nonkeys.courseCode courseIsQueueable -> courseCapacityDoes not violate any normalforms. If we know a courseCode and if it is queueable it will have a courseCapacity. If the course is not queueable it should not have a capacity.studentLoginID courseCode courseIsQueueable -> placeInQueueDoes not violate any normalforms. If we know a studentLoginID and a courseCode and if it is queueable, we will know if the student has a place in the queue or not.